import{a}from"./chunk-BJOKIBL3.js";import{N as u,U as d,Ub as f,i as s,n}from"./chunk-FFFHX7KO.js";var o=class{static toEntity(t){if(!t.id)throw new Error("The Id should be provided to map from Dto to Entity");return{id:t.id,name:t.name,description:t.description,slug:t.slug,isActive:t.is_active}}static toDto(t){return{name:t.name,description:t.description,slug:t.slug,is_active:t.isActive}}};var v=(()=>{let t=class t{constructor(){this._db=d(f).supabase}getCategories(){return s(this._db.from(a.CATEGORIES).select("*").order("id",{ascending:!0})).pipe(n(({data:r,error:e})=>{if(e)throw new Error(e.message);return r.map(i=>o.toEntity(i))}))}getCategoryById(r){return s(this._db.from(a.CATEGORIES).select("*").eq("id",r)).pipe(n(({data:e,error:i})=>{if(i)throw new Error(i.message);return o.toEntity(e[0])}))}createCategory(r){let e=o.toDto(r);return s(this._db.from(a.CATEGORIES).insert(e)).pipe(n(({status:i,error:m})=>{if(m)throw new Error(m.message);return i===201}))}updateCategory(r,e){let i=o.toDto(r);return s(this._db.from(a.CATEGORIES).update(i).eq("id",e)).pipe(n(({status:m,error:c})=>{if(c)throw new Error(c.message);return m===204}))}};t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=u({token:t,factory:t.\u0275fac,providedIn:"root"});let p=t;return p})();export{v as a};
